{"version":3,"file":"sortablejs.directive.d.ts","sources":["sortablejs.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChange } from '@angular/core';\nimport { Options } from 'sortablejs';\nimport { SortablejsService } from './sortablejs.service';\nexport declare type SortableData = any | any[];\nexport declare class SortablejsDirective implements OnInit, OnChanges, OnDestroy {\n    private globalConfig;\n    private service;\n    private element;\n    private zone;\n    private renderer;\n    sortablejs: SortableData;\n    sortablejsContainer: string;\n    sortablejsOptions: Options;\n    sortablejsCloneFunction: (item: any) => any;\n    private sortableInstance;\n    sortablejsInit: EventEmitter<any>;\n    constructor(globalConfig: Options, service: SortablejsService, element: ElementRef, zone: NgZone, renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnChanges(changes: {\n        [prop in keyof SortablejsDirective]: SimpleChange;\n    }): void;\n    ngOnDestroy(): void;\n    private create;\n    private getBindings;\n    private get options();\n    private get optionsWithoutEvents();\n    private proxyEvent;\n    private get isCloning();\n    private clone;\n    private get overridenOptions();\n}\n"]}